// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SigesaData.Context;
using SigesaData.Context.SigesaData.Context;

#nullable disable

namespace SigesaData.Migrations
{
    [DbContext(typeof(SigesaDbContext))]
    [Migration("20250611134456_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SigesaEntidades.Bitacora", b =>
                {
                    b.Property<int>("IdBitacora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBitacora"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAccion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Modulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBitacora");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Bitacora", (string)null);
                });

            modelBuilder.Entity("SigesaEntidades.Equipamiento", b =>
                {
                    b.Property<int>("IdEquipamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipamiento"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEquipamiento");

                    b.ToTable("Equipamiento", (string)null);
                });

            modelBuilder.Entity("SigesaEntidades.Espacio", b =>
                {
                    b.Property<int>("IdEspacio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEspacio"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoEspacio")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEspacio");

                    b.HasIndex("IdTipoEspacio");

                    b.ToTable("Espacio", (string)null);
                });

            modelBuilder.Entity("SigesaEntidades.EspacioEquipamiento", b =>
                {
                    b.Property<int>("IdEspacioEquipamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEspacioEquipamiento"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEquipamiento")
                        .HasColumnType("int");

                    b.Property<int>("IdEspacio")
                        .HasColumnType("int");

                    b.HasKey("IdEspacioEquipamiento");

                    b.HasIndex("IdEquipamiento");

                    b.HasIndex("IdEspacio");

                    b.ToTable("EspacioEquipamiento", (string)null);
                });

            modelBuilder.Entity("SigesaEntidades.EstadoReserva", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstado");

                    b.ToTable("EstadoReserva", (string)null);
                });

            modelBuilder.Entity("SigesaEntidades.Notificacion", b =>
                {
                    b.Property<int>("IdNotificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNotificacion"));

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoNotificacion")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNotificacion");

                    b.HasIndex("IdTipoNotificacion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Notificacion", (string)null);
                });

            modelBuilder.Entity("SigesaEntidades.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReserva"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEspacio")
                        .HasColumnType("int");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdReserva");

                    b.HasIndex("IdEspacio");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("SigesaEntidades.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRolUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdRol");

                    b.HasIndex("IdRolUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("SigesaEntidades.RolUsuario", b =>
                {
                    b.Property<int>("IdRolUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRolUsuario"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRolUsuario");

                    b.ToTable("RolUsuario", (string)null);
                });

            modelBuilder.Entity("SigesaEntidades.TipoEspacio", b =>
                {
                    b.Property<int>("IdTipoEspacio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoEspacio"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoEspacio");

                    b.ToTable("TipoEspacio", (string)null);
                });

            modelBuilder.Entity("SigesaEntidades.TipoNotificacion", b =>
                {
                    b.Property<int>("IdTipoNotificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoNotificacion"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoNotificacion");

                    b.ToTable("TipoNotificacion", (string)null);
                });

            modelBuilder.Entity("SigesaEntidades.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumentoIdentidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("SigesaEntidades.Bitacora", b =>
                {
                    b.HasOne("SigesaEntidades.Usuario", "Usuario")
                        .WithMany("Bitacoras")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SigesaEntidades.Espacio", b =>
                {
                    b.HasOne("SigesaEntidades.TipoEspacio", "Tipo")
                        .WithMany("Espacios")
                        .HasForeignKey("IdTipoEspacio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("SigesaEntidades.EspacioEquipamiento", b =>
                {
                    b.HasOne("SigesaEntidades.Equipamiento", "Equipamiento")
                        .WithMany("EspacioEquipamientos")
                        .HasForeignKey("IdEquipamiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SigesaEntidades.Espacio", "Espacio")
                        .WithMany("EspacioEquipamientos")
                        .HasForeignKey("IdEspacio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipamiento");

                    b.Navigation("Espacio");
                });

            modelBuilder.Entity("SigesaEntidades.Notificacion", b =>
                {
                    b.HasOne("SigesaEntidades.TipoNotificacion", "Tipo")
                        .WithMany("Notificaciones")
                        .HasForeignKey("IdTipoNotificacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SigesaEntidades.Usuario", "Usuario")
                        .WithMany("Notificaciones")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SigesaEntidades.Reserva", b =>
                {
                    b.HasOne("SigesaEntidades.Espacio", "Espacio")
                        .WithMany("Reservas")
                        .HasForeignKey("IdEspacio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SigesaEntidades.EstadoReserva", "Estado")
                        .WithMany("Reservas")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SigesaEntidades.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Espacio");

                    b.Navigation("Estado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SigesaEntidades.Rol", b =>
                {
                    b.HasOne("SigesaEntidades.RolUsuario", "RolUsuario")
                        .WithMany("Roles")
                        .HasForeignKey("IdRolUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SigesaEntidades.Usuario", "Usuario")
                        .WithMany("Roles")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RolUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SigesaEntidades.Equipamiento", b =>
                {
                    b.Navigation("EspacioEquipamientos");
                });

            modelBuilder.Entity("SigesaEntidades.Espacio", b =>
                {
                    b.Navigation("EspacioEquipamientos");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("SigesaEntidades.EstadoReserva", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("SigesaEntidades.RolUsuario", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("SigesaEntidades.TipoEspacio", b =>
                {
                    b.Navigation("Espacios");
                });

            modelBuilder.Entity("SigesaEntidades.TipoNotificacion", b =>
                {
                    b.Navigation("Notificaciones");
                });

            modelBuilder.Entity("SigesaEntidades.Usuario", b =>
                {
                    b.Navigation("Bitacoras");

                    b.Navigation("Notificaciones");

                    b.Navigation("Reservas");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
